package routes

import (
	"os"

	"github.com/clerk/clerk-sdk-go/v2"
	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
	"github.com/joho/godotenv"
	"github.com/solo-samurai/go-serverless/app/handler"
	"github.com/solo-samurai/go-serverless/middleware"

	_ "github.com/solo-samurai/go-serverless/docs" // docs is generated by Swag CLI, you have to import it.
)

func Register(app *fiber.App) {

	godotenv.Load()

	app.Get("/ping", handler.Ping)
	app.Get("/health", handler.Health)

	key := os.Getenv("CLERK_SECRET_KEY")

	if key == "" {
		panic("Clerk API key not found")
	}

	clerk.SetKey(key)

	route := app.Group("/api")

	route.Get("/", handler.Index)
	route.Get("/hello/:name", middleware.RequireAuth(), handler.Hello)
	route.Get("/doc/*", swagger.HandlerDefault)

	app.Use(func(c *fiber.Ctx) error {
		return c.Status(fiber.StatusNotFound).JSON(fiber.Map{
			"errors": "this page could not be found",
		})
	})
}
